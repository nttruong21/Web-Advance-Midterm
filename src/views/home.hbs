<div class="container-fluid h-100">
    <div class="row justify-content-center align-items-center h-100">
        {{!-- CONTACTS --}}
        <div class="col-md-4 col-xl-4 chat ">
            <div class="column-item left-card mb-sm-3 mb-md-0 contacts_card">
                <div class="card-header card-left-header d-flex align-items-center cursor-pointer">
                    <span id="action_menu_btn"><img src="/avatar/{{userSession.avatar}}" alt=""
                            class="rounded-circle user_img"></span>
                    <div class="action_menu">
                        <ul>
                            <li><i class="fas fa-user-circle"></i>Profile</li>
                            <li><i class="fas fa-users"></i>Create new room</li>
                            <li onclick="logout()"><i
                                    class="fa-solid fa-arrow-right-from-bracket"></i>Logout</li>
                        </ul>
                    </div>
                    <div class="input-group ml-1-rem h-40-px">
                        <input type="text" placeholder="Search..." name=""
                            class="form-control search">
                        <div class="input-group-prepend">
                            <span class="input-group-text search_btn"><i
                                    class="fas fa-search"></i></span>
                        </div>
                    </div>
                </div>
                <div class="card-body contacts_body">
                    <ui id="contacts" class="contacts">
                        {{!-- ROOM TỔNG --}}
                        <li class="active border-radius-12" data-room="multiUserChat"
                            data-user-avatar="{{this.avatar}}" onclick="changeRoom(this)">
                            <div class="d-flex bd-highlight align-items-center">
                                <div class="img_cont">
                                    <img src="https://toppng.com/uploads/preview/real-madrid-cf-logo-vector-11574227807ksehd7rvh5.png"
                                        class="rounded-circle user_img">
                                    <span class="online_icon"></span>
                                </div>
                                <div class="user_info">
                                    <span>Room</span>
                                    <p> is online</p>
                                </div>
                            </div>
                        </li>
                        {{!-- USERS --}}
                        {{#each users}}
                        <li class="active border-radius-12" data-room="onlyUserChat"
                            data-user-username="{{this.username}}" data-user-id="{{this._id}}"
                            data-user-avatar="{{this.avatar}}" onclick="changeRoom(this)">
                            <div class="d-flex bd-highlight align-items-center">
                                <div class="img_cont">
                                    <img src="/avatar/{{this.avatar}}"
                                        class="rounded-circle user_img">
                                    <span class="online_icon"></span>
                                </div>
                                <div class="user_info">
                                    <span>{{this.username}}</span>
                                    <p>{{this.username}} is online</p>
                                </div>
                            </div>
                        </li>
                        {{else}}
                        {{/each}}
                    </ui>
                </div>
            </div>
        </div>

        {{!-- CHAT --}}
        <div class="col-md-8 col-xl-8 chat">
            <div class="column-item right-card">
                <div class="card-header msg_head">
                    <div class="d-flex bd-highlight align-items-center">
                        <div class="img_cont">
                            <img id="current-user-avatar"
                                src="https://toppng.com/uploads/preview/real-madrid-cf-logo-vector-11574227807ksehd7rvh5.png"
                                class="rounded-circle user_img">
                            <span class="online_icon"></span>
                        </div>
                        <div class="user_info mr-auto">
                            <span id="current-user-name">Room</span>
                            <p>1767 Messages</p>
                        </div>
                        <div class="user-actions">
                            <span><i class="fa-solid fa-phone"></i></span>
                            <span><i class="fas fa-video"></i></span>
                            <span <i class="fas fa-ellipsis-v"></i></span>
                        </div>
                    </div>
                </div>

                {{!-- CHAT MESSAGES CONTENT --}}
                <div class="card-body msg_card_body" id="chat-message-content">
                </div>

                <div class="card-footer send-message-group">
                    <form id="send-message-form" class="input-group message-input">
                        <input id="message-input" class="form-control type_msg"
                            placeholder="Type your message..."></input>
                        <button id="send-message-btn" class="input-group-text send_btn"
                            type="submit">
                            <i class="fas fa-location-arrow"></i>
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div id="user-session" data-user-session-id="{{userSession._id}}"
        data-user-session-username="{{userSession.username}}"
        data-user-session-avatar="{{userSession.avatar}}"></div>
</div>
<script src="/socket.io/socket.io.js"></script>
<script>

    const socket = io("http://localhost:3000");

    const sendMessageForm = document.getElementById("send-message-form");
    const messageInput = document.getElementById("message-input");
    const sendMessageBtn = document.getElementById("send-message-btn");
    const chatMessageContent = document.getElementById("chat-message-content");

    // USER SESSION
    const userSessionUsername = document.getElementById("user-session").dataset.userSessionUsername || "";
    const userSessionAvatar = document.getElementById("user-session").dataset.userSessionAvatar || "";
    const userSessionId = document.getElementById("user-session").dataset.userSessionId || "";
    console.log(">>> User session: ", userSessionId);

    // CURRENT CHATTED USER / ROOM
    let currentUserUsername = "Room";
    let currentRoom = "multiUserChat";
    console.log(">>> Current user: ", currentUserUsername);
    console.log(">>> Current room: ", currentRoom);

    setTimeout(() => {
        chatMessageContent.scrollTop = chatMessageContent.scrollHeight;
    }, 100);

    // GỬI YÊU CẦU THAY ĐỔI ROOM 
    socket.emit("client-change-room", "multiUserChat");

    // CLIENT GỬI DỮ LIỆU LÊN SERVER -> EMIT
    sendMessageForm.addEventListener("submit", (e) => {
        e.preventDefault();

        const message = messageInput.value;
        const time = new Date().toLocaleString();

        if (currentRoom === "multiUserChat") {
            socket.emit("client-sent-data", { sender: userSessionUsername, message, time, senderAvatar: userSessionAvatar, room: currentRoom });
        } else {
            socket.emit("client-sent-data", { sender: userSessionUsername, receiver: currentUserUsername, message, time, senderAvatar: userSessionAvatar, room: currentRoom });
        }
        messageInput.value = "";

        const itemMessage = document.createElement("div");
        itemMessage.innerHTML = `
            <div class="d-flex justify-content-end mb-4">
                <div class="msg_container_send">
                    ${message}
                    <span class="msg_time_send">${time}</span>
                </div>
                <div class="img_cont_msg">
                    <img src="/avatar/${userSessionAvatar}"
                        class="rounded-circle user_img_msg">
                </div>
            </div>
        `;
        chatMessageContent.appendChild(itemMessage);
        chatMessageContent.scrollTop = chatMessageContent.scrollHeight;
    });

    // CLIENT NHẬN DỮ LIỆU TỪ SERVER  -> ON
    socket.on("server-sent-data", (data) => {
        if (data.room === currentRoom) {
            const itemMessage = document.createElement("div");
            itemMessage.innerHTML = `
            <div class="d-flex justify-content-start mb-4">
                <div class="img_cont_msg">
                    <img src="/avatar/${data.senderAvatar}"
                        class="rounded-circle user_img_msg">
                </div>
                <div class="msg_container"> 
                    ${data.message}
                    <span  class="msg_time">${data.time}</span>
                </div>
            </div>
        `;
            chatMessageContent.appendChild(itemMessage);
            chatMessageContent.scrollTop = chatMessageContent.scrollHeight;
        }
    });

    // NHẤN VÀO USER -> ADD TO ROOM
    function changeRoom(e) {
        const room = e.dataset.room || ""
        if (room === "multiUserChat") {
            socket.emit("client-change-room", room);
            currentRoom = room;
            currentUserUsername = "Room";
            console.log(">>> Current user: ", currentUserUsername);
            console.log(">>> Current room: ", currentRoom);
            document.getElementById("current-user-avatar").src = "https://toppng.com/uploads/preview/real-madrid-cf-logo-vector-11574227807ksehd7rvh5.png";
            document.getElementById("current-user-name").textContent = "Room";
        } else {
            const username = e.dataset.userUsername || "";
            const avatar = e.dataset.userAvatar || "";
            const id = e.dataset.userId || "";
            // console.log(username, avatar);
            document.getElementById("current-user-avatar").src = "/avatar/" + avatar;
            document.getElementById("current-user-name").textContent = username;
            currentRoom = (userSessionId + id).split("").sort().join("");
            currentUserUsername = username;
            console.log(">>> Current user: ", currentUserUsername);
            console.log(">>> Current room: ", currentRoom);
            // GỬI YÊU CẦU THAY ĐỔI ROOM 
            socket.emit("client-change-room", currentRoom);
        }
    }

    // CLIENT NHẬN NỘI DUNG CHAT CỦA ROOM VÀ RENDER RA MÀN HÌNH
    socket.on("server-send-chats-of-room", (chats) => {
        const html = chats.map(chat => {
            if (chat.sender === userSessionUsername) {
                return `
                    <div class="d-flex justify-content-end mb-4">
                        <div class="msg_container_send">
                            ${chat.message}
                            <span class="msg_time_send">${new Date(chat.createdAt).toLocaleString()}</span>
                        </div>
                        <div class="img_cont_msg">
                            <img src="/avatar/${chat.senderAvatar}"
                                class="rounded-circle user_img_msg">
                        </div>
                    </div>
                `;
            } else {
                return `
                    <div class="d-flex justify-content-start mb-4">
                        <div class="img_cont_msg">
                            <img src="/avatar/${chat.senderAvatar}"
                                class="rounded-circle user_img_msg">
                        </div>
                        <div class="msg_container"> 
                            ${chat.message}
                            <span  class="msg_time">${new Date(chat.createdAt).toLocaleString()}</span>
                        </div>
                    </div>
                `;
            }
        });
        chatMessageContent.innerHTML = html.join("");
        chatMessageContent.scrollTop = chatMessageContent.scrollHeight;
    })

    function logout() {
        window.location.href = "/logout";
    }
</script>